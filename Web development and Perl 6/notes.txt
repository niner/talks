BreakDancer: March 2014
Crust: Jan 2016
Web: May: 2016
Web::App::Ballet: Jun 2015
Web::App::MVC: Mar 2013
Web::RF: Nov 2015 (3 day project)
Web::Template: Apr 2016 (before that Jun 2014)
HTTP::Server::Tiny failed a test, nobody noticed...
"Crust is a set of tools for using the PSGI stack. It contains middleware components(TBI), and utilities for Web application frameworks."
Note the "TBI"

Web::App::Ballet:
+   A Dancer-like interface to Web::App::Dispatch. NOTE: This project will
+   be merged with [Bailador](https://github.com/tadzik/Bailador) in the near future.
This was written in March 2013

Bailador docs spread between POD and perl6maven.com. Covers only very minimalistic examples.
doesn't have any uri_for capability
doesn't have an any('get', 'post'), so you have to duplicate all subs accessible via different methods

Intro:
http://blogs.perl.org/users/ken_youens-clark/2016/10/web-development-with-perl-5.html
"Even though I am in the thralls of Perl 6, I still do all my web development in Perl 5 because the ecology of modules is so mature."

http://www.arewewebyet.org
"Can I replace my Rails/Django/Flask already?

Well, probably not yet. While the basics are there, many of the handy utility libs that make working with many popular frameworks so quick and easy are still missing. If your service primarily provides an API to be consumed by other computers, requires little external services and you are happy with writing most SQL yourself, then Yes, You Can! Otherwise, we would not recommend it just yet."

HTTP2?

Bailador performance:

Concurrency Level:      1
Time taken for tests:   24.063 seconds
Complete requests:      100
Failed requests:        0
Total transferred:      59500 bytes
HTML transferred:       45400 bytes
Requests per second:    4.16 [#/sec] (mean)
Time per request:       240.626 [ms] (mean)
Time per request:       240.626 [ms] (mean, across all concurrent requests)
Transfer rate:          2.41 [Kbytes/sec] received

Connection Times (ms)
              min  mean[+/-sd] median   max
Connect:        0    0   0.0      0       0
Processing:   218  241  24.9    238     447
Waiting:      218  241  24.9    238     447
Total:        218  241  24.9    238     447

Dancer2 performance:

Concurrency Level:      1
Time taken for tests:   5.741 seconds
Complete requests:      1000
Failed requests:        0
Total transferred:      712000 bytes
HTML transferred:       533000 bytes
Requests per second:    174.18 [#/sec] (mean)
Time per request:       5.741 [ms] (mean)
Time per request:       5.741 [ms] (mean, across all concurrent requests)
Transfer rate:          121.11 [Kbytes/sec] received

Connection Times (ms)
              min  mean[+/-sd] median   max
Connect:        0    0   0.0      0       0
Processing:     5    6   1.8      5      20
Waiting:        5    6   1.8      5      20
Total:          5    6   1.8      5      20


Conclusion:
The only thing keeping you from doing web development with Perl 6 is yourself.
You have to decide whether you want to be on the forefront of development and seizing the opportunity to carve out a name for yourself.
Or whether you want to get things done with proven technology and familiar tools.
Perl 6 will be with you in any case.
